import numpy as np
import pandas as pd


def annual_solar_mean(wtk, latitude, longitude):
    '''
    This function calculates the energy produced a year in kWh for
    a single solar panel with an average area of 65 in x 39 in
    and an average efficiency of 20% at a specific location in
    the United States.
    Inputs
        wtk : h5pyd.File instance for the wind toolkit
        latitude : latitude value for desired location
        longitude : longitude value for desired location
    Outputs
        anneal_sum : energy generated by one solar panel in an
        average year in kWh.
    '''
    dset = wtk['GHI']
    time_index = pd.to_datetime(wtk['datetime'][...].astype(str))
    df = pd.DataFrame(dset[:, latitude, longitude], columns=['ghi'])
    df['date'] = time_index
    df = df.set_index('date')
    df["year"] = df.index.year
    df["month"] = df.index.month
    df["day"] = df.index.day
    df["hour"] = df.index.hour
    agg = df.groupby(["month", "hour"]).mean()
    agg = pd.DataFrame(agg, columns=['ghi', 'year', 'day'])
    agg = agg.reset_index().pivot(index="month", columns="hour", values="ghi")
    power_gen = agg * 0.20 * 1.635481 / 1000
    daily_sum = []
    days_month = np.array([31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31])
    months = range(0, 12)
    for month in months:
        daily_sum.append(power_gen.iloc[month].sum())
    daily_sum = np.array(daily_sum)
    monthly_sum = daily_sum * days_month
    annual_sum = monthly_sum.sum()

    return annual_sum


def num_solar_panels(annual_sum, energy_used):
    '''
    This function determines how many solar panels are needed
    to meet the need of the energy used at that location.
    Inputs
        annual_sum : energy in kWh that one solar panel
        generates in a year.
        energy_used : the amount of energy used at that
        location in kWh.
    Outputs
        num_panels : the recommended number of panels needed
        to account for the energy consumption.
    '''
    num_panels = energy_used / annual_sum
    num_panels = np.round(num_panels)

    return num_panels
